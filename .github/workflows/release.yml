name: Release

on:
  release:
    types: [ published ]

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: '0'
          persist-credentials: 'false'

      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'

      - uses: gradle/actions/setup-gradle@v5
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: 'https://gradle.com/terms-of-service'
          build-scan-terms-of-use-agree: 'yes'

      - name: Set Version from Release Tag
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"
          sed -i "s/^version=.*/version=${VERSION}/" gradle.properties

      - name: Run build
        run: ./gradlew build -x integrationTest

      - name: Publish to Maven Central
        if: github.repository == 'jenkinsci/gradle-convention-plugin'
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_SIGNING_PASSWORD }}
        run: ./gradlew publish --no-configuration-cache

      - name: Publish plugin to Gradle Plugin Portal
        if: github.repository == 'jenkinsci/gradle-convention-plugin'
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        run: ./gradlew publishPlugins --no-configuration-cache
